# Multi-stage build for Telegram bot
FROM node:20-alpine AS base

# Install pnpm
RUN npm install -g pnpm@8.15.0

# Set working directory
WORKDIR /app

# Copy workspace configuration
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
COPY packages/core/package.json ./packages/core/
COPY apps/bot/package.json ./apps/bot/

# Install dependencies
RUN pnpm install --frozen-lockfile

# Development stage
FROM base AS development
COPY . .
CMD ["pnpm", "bot:dev"]

# Build stage
FROM base AS builder
COPY . .
RUN pnpm run build
RUN pnpm --filter @dlmm-copilot/bot build

# Production stage
FROM node:20-alpine AS production
WORKDIR /app

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 bot

# Copy built application
COPY --from=builder /app/apps/bot/dist ./dist
COPY --from=builder /app/apps/bot/package.json ./package.json
COPY --from=builder /app/packages/core/dist ./node_modules/@dlmm-copilot/core/dist
COPY --from=builder /app/node_modules ./node_modules

# Set correct permissions
RUN chown -R bot:nodejs /app
USER bot

ENV NODE_ENV production

HEALTHCHECK --interval=60s --timeout=10s --start-period=30s --retries=3 \
  CMD node -e "process.exit(0)" || exit 1

CMD ["node", "dist/index.js"]