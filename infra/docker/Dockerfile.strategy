# Multi-stage build for Strategy service
FROM node:20-alpine AS base

# Install pnpm
RUN npm install -g pnpm@8.15.0

# Set working directory
WORKDIR /app

# Copy workspace configuration
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
COPY packages/core/package.json ./packages/core/
COPY services/strategy/package.json ./services/strategy/

# Install dependencies
RUN pnpm install --frozen-lockfile

# Development stage
FROM base AS development
COPY . .
EXPOSE 3001
CMD ["pnpm", "strategy:dev"]

# Build stage
FROM base AS builder
COPY . .
RUN pnpm run build
RUN pnpm --filter @dlmm-copilot/strategy build

# Production stage
FROM node:20-alpine AS production
WORKDIR /app

# Create non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 strategy

# Copy built application
COPY --from=builder /app/services/strategy/dist ./dist
COPY --from=builder /app/services/strategy/package.json ./package.json
COPY --from=builder /app/packages/core/dist ./node_modules/@dlmm-copilot/core/dist
COPY --from=builder /app/node_modules ./node_modules

# Set correct permissions
RUN chown -R strategy:nodejs /app
USER strategy

EXPOSE 3001
ENV NODE_ENV production
ENV PORT 3001

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "const http = require('http'); http.get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

CMD ["node", "dist/server.js"]